#!/bin/sh
# postinst script for fwupdate
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# in between 0.4 and 0.5 release, upstream renamed
	#the binary that was installed to the ESP.
	if dpkg --compare-versions "$2" lt "0.4-6"; then
	        EFIDIR=ubuntu
		if [ -f /boot/efi/EFI/$EFIDIR/fwupdate.efi ]; then
			rm -f /boot/efi/EFI/$EFIDIR/fwupdate.efi
		fi
	fi
	# older versions were missing lsb_release in dependencies
	# correct wrongly created directories
	if dpkg --compare-versions "$2" lt "0.5-2"; then
		if [ -d /boot/efi/EFI/fw ]; then
			rmdir --parents --ignore-fail-on-non-empty /boot/efi/EFI/fw
		fi
	fi

	#install binary to ESP
	/usr/lib/fwupdate/install

	#cleanup from other potential installs
	#this is actually a systemd static service.
	#I would have done it with dh-systemd, but deb-systemd-invoke
	#won't run static services in postinst.
	/usr/lib/fwupdate/cleanup || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
